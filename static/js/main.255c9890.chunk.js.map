{"version":3,"sources":["App.module.css","Selectors/selectors.js","components/Display.jsx","Redux/display-reducer.js","components/Keyboard.jsx","components/Clear.jsx","App.js","serviceWorker.js","Redux/redux-store.js","index.js"],"names":["module","exports","getValue","state","display","input","connect","value","className","s","ADD_SYMBOL","TO_COUNT","CLEAR_DISPLAY","initialState","addSymbol","type","toCount","items","keyboard","map","i","onClick","key","isNaN","item","operator","clearDisplay","clear","App","outer","wrapper","Boolean","window","location","hostname","match","reducers","combineReducers","action","math","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oJACAA,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,QAAU,qBAAqB,MAAQ,mBAAmB,SAAW,sBAAsB,KAAO,kBAAkB,SAAW,sBAAsB,MAAQ,qB,2GCD7LC,EAAW,SAACC,GACrB,OAAOA,EAAMC,QAAQC,OCkBVC,eANS,SAACH,GACrB,MAAO,CACHI,MAAOL,EAASC,MAIgB,KAAzBG,EAdC,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACd,OACI,6BACI,2BAAOA,MAAOA,EAAOC,UAAWC,IAAEJ,Y,ykBCN9C,IAAMK,EAAa,4BACbC,EAAW,0BACXC,EAAgB,+BAElBC,EAAe,CACfR,MAAO,ICcIC,cAAQ,KAAM,CAACQ,UDcL,SAACP,GACtB,MAAO,CACHQ,KAAML,EACNH,UCjBiCS,QDqBlB,WACnB,MAAO,CAACD,KAAMJ,KCtBHL,EAhBE,SAAC,GAAiC,IAAhCW,EAA+B,EAA/BA,MAAOH,EAAwB,EAAxBA,UAAWE,EAAa,EAAbA,QAKjC,OACI,yBAAKR,UAAWC,IAAES,UACbD,EAAME,KAAI,SAAAC,GAAC,OACR,4BAAQC,QAAS,kBANb,SAACD,GACP,MAANA,EAAYN,EAAUM,GAAKJ,IAKIK,CAAQD,IAAIE,IAAKF,EAChCZ,UAAYe,MAAMH,IAAY,MAANA,GAAmB,MAANA,EAAqBX,IAAEe,KAAO,IAAMf,IAAEgB,SAA1BhB,IAAEe,MACtDJ,UCFNd,cAAQ,KAAM,CAACoB,aFkCF,WACxB,MAAO,CAACX,KAAMH,KEnCHN,EAPD,SAAC,GAAoB,IAAnBoB,EAAkB,EAAlBA,aACZ,OACI,4BAAQL,QAASK,EAAclB,UAAWC,IAAEkB,OAA5C,YCYOC,EAbH,WAER,OACI,yBAAKpB,UAAWC,IAAEoB,OACd,yBAAKrB,UAAWC,IAAEqB,SACd,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUb,MALR,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,IAAI,OAM3C,kBAAC,EAAD,SCFIc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,WCdAC,EAAWC,YAAgB,CAC7BjC,QLK0B,WAAmC,IAAlCD,EAAiC,uDAAzBU,EAAcyB,EAAW,uCAC5D,OAAQA,EAAOvB,MACX,KAAKL,EACD,OAAO,EAAP,GACOP,EADP,CAEIE,MAAOF,EAAME,MAAQiC,EAAO/B,QAEpC,KAAKI,EACD,OAAO,EAAP,GACOR,EADP,CAEIE,MAAOkC,IAAcpC,EAAME,SAEnC,KAAKO,EACD,OAAO,EAAP,GACOT,EADP,CAEIE,MAAO,KAGf,QACI,OAAOF,MKrBfqC,EAAQC,YAAYL,GAETI,IAEfR,OAAOQ,MAAQA,ECJfE,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,GACb,kBAAC,EAAD,OACSI,SAASC,eAAe,SFsHnC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.255c9890.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"outer\":\"App_outer__3JzU2\",\"wrapper\":\"App_wrapper__2vkyj\",\"input\":\"App_input__1KJFt\",\"keyboard\":\"App_keyboard__2BfyK\",\"item\":\"App_item__1d0qR\",\"operator\":\"App_operator__3VmXB\",\"clear\":\"App_clear__f7W50\"};","export const getValue = (state) => {\r\n    return state.display.input\r\n};","import React from 'react'\r\nimport s from \"../App.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {getValue} from \"../Selectors/selectors\";\r\n\r\nconst Display = ({value}) => {\r\n    return (\r\n        <div>\r\n            <input value={value} className={s.input} />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        value: getValue(state)\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Display)","import * as math from 'mathjs';\r\n\r\nconst ADD_SYMBOL = 'displayReducer/ADD_SYMBOL';\r\nconst TO_COUNT = 'displayReducer/TO_COUNT';\r\nconst CLEAR_DISPLAY = 'displayReducer/CLEAR_DISPLAY';\r\n\r\nlet initialState = {\r\n    input: ''\r\n};\r\n\r\nexport const displayReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_SYMBOL:\r\n            return {\r\n                ...state,\r\n                input: state.input + action.value\r\n            };\r\n        case TO_COUNT:\r\n            return {\r\n                ...state,\r\n                input: math.evaluate(state.input)\r\n            };\r\n        case CLEAR_DISPLAY:\r\n            return {\r\n                ...state,\r\n                input: ''\r\n            };\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const addSymbol = (value) => {\r\n    return {\r\n        type: ADD_SYMBOL,\r\n        value\r\n    }\r\n};\r\n\r\nexport const toCount = () => {\r\n    return {type: TO_COUNT}\r\n};\r\n\r\n\r\nexport const clearDisplay = () => {\r\n    return {type: CLEAR_DISPLAY}\r\n};","import React from 'react'\r\nimport s from \"../App.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {addSymbol, toCount} from \"../Redux/display-reducer\";\r\n\r\nconst Keyboard = ({items, addSymbol, toCount}) => {\r\n\r\n    const onClick = (i) => {\r\n        i !== '=' ? addSymbol(i) : toCount()\r\n    };\r\n    return (\r\n        <div className={s.keyboard}>\r\n            {items.map(i => (\r\n                <button onClick={() => onClick(i)} key={i}\r\n                        className={!isNaN(i) || i === '.' || i === '=' ? s.item : s.item + ' ' + s.operator}>\r\n                    {i}\r\n                </button>))}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default connect(null, {addSymbol, toCount})(Keyboard)","import React from 'react'\r\nimport s from \"../App.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {clearDisplay} from \"../Redux/display-reducer\";\r\n\r\n\r\nconst Clear = ({clearDisplay}) => {\r\n    return (\r\n        <button onClick={clearDisplay} className={s.clear}>Clear</button>\r\n    )\r\n};\r\n\r\n\r\nexport default connect(null, {clearDisplay})(Clear)","import React from'react'\r\nimport s from './App.module.css'\r\nimport Display from \"./components/Display\";\r\nimport Keyboard from \"./components/Keyboard\";\r\nimport Clear from \"./components/Clear\";\r\n\r\n\r\nconst App = () => {\r\n    const items = [7,8,9,'/',4,5,6,'*',1,2,3,'+','.',0,'=','-'];\r\n    return (\r\n        <div className={s.outer}>\r\n            <div className={s.wrapper}>\r\n                <Display />\r\n                <Keyboard items={items}/>\r\n                <Clear />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers, createStore} from \"redux\";\r\nimport {displayReducer} from \"./display-reducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    display: displayReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store\r\n\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from './Redux/redux-store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}